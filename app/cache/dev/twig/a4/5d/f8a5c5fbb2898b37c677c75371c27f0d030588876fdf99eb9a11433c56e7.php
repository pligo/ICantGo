<?php

/* ICantGoUserBundle:ChangePassword:newTwigTemplate.html.twig */
class __TwigTemplate_a45df8a5c5fbb2898b37c677c75371c27f0d030588876fdf99eb9a11433c56e7 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = false;

        $this->blocks = array(
            'form_errors' => array($this, 'block_form_errors'),
        );
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
        // line 1
        echo "
";
        // line 2
        $this->displayBlock('form_errors', $context, $blocks);
    }

    public function block_form_errors($context, array $blocks = array())
    {
        // line 3
        echo "    ";
        ob_start();
        // line 4
        echo "        ";
        if ((twig_length_filter($this->env, (isset($context["errors"]) ? $context["errors"] : $this->getContext($context, "errors"))) > 0)) {
            // line 5
            echo "        <ul class=\"error_list\">
            ";
            // line 6
            $context['_parent'] = (array) $context;
            $context['_seq'] = twig_ensure_traversable((isset($context["errors"]) ? $context["errors"] : $this->getContext($context, "errors")));
            foreach ($context['_seq'] as $context["_key"] => $context["error"]) {
                // line 7
                echo "                <li>";
                echo twig_escape_filter($this->env, (((null === $this->getAttribute((isset($context["error"]) ? $context["error"] : $this->getContext($context, "error")), "messagePluralization"))) ? ($this->env->getExtension('translator')->trans($this->getAttribute((isset($context["error"]) ? $context["error"] : $this->getContext($context, "error")), "messageTemplate"), $this->getAttribute((isset($context["error"]) ? $context["error"] : $this->getContext($context, "error")), "messageParameters"), "validators")) : ($this->env->getExtension('translator')->transchoice($this->getAttribute((isset($context["error"]) ? $context["error"] : $this->getContext($context, "error")), "messageTemplate"), $this->getAttribute((isset($context["error"]) ? $context["error"] : $this->getContext($context, "error")), "messagePluralization"), $this->getAttribute((isset($context["error"]) ? $context["error"] : $this->getContext($context, "error")), "messageParameters"), "validators"))), "html", null, true);
                // line 11
                echo "</li>
            ";
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['error'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
            // line 13
            echo "        </ul>
        ";
        }
        // line 15
        echo "    ";
        echo trim(preg_replace('/>\s+</', '><', ob_get_clean()));
    }

    public function getTemplateName()
    {
        return "ICantGoUserBundle:ChangePassword:newTwigTemplate.html.twig";
    }

    public function getDebugInfo()
    {
        return array (  20 => 1,  284 => 128,  280 => 127,  253 => 112,  239 => 104,  223 => 94,  202 => 79,  194 => 74,  188 => 71,  165 => 56,  153 => 50,  1317 => 662,  1314 => 661,  1308 => 664,  1306 => 661,  1301 => 659,  1297 => 657,  1294 => 656,  1288 => 648,  1284 => 646,  1277 => 642,  1273 => 641,  1267 => 638,  1263 => 637,  1259 => 636,  1255 => 634,  1253 => 633,  1232 => 615,  1224 => 610,  1214 => 603,  1202 => 594,  1153 => 550,  1150 => 549,  1148 => 548,  1112 => 515,  1105 => 510,  1103 => 505,  1094 => 499,  1090 => 498,  1085 => 496,  1081 => 495,  1078 => 494,  1075 => 493,  1068 => 651,  1066 => 493,  1062 => 492,  1058 => 490,  1056 => 489,  1053 => 488,  1039 => 472,  1033 => 468,  1018 => 455,  1016 => 454,  999 => 440,  996 => 439,  992 => 437,  982 => 431,  980 => 430,  973 => 425,  971 => 420,  965 => 417,  962 => 416,  959 => 415,  952 => 483,  950 => 415,  946 => 414,  942 => 412,  940 => 411,  937 => 410,  930 => 405,  923 => 400,  921 => 399,  916 => 397,  911 => 395,  906 => 392,  903 => 391,  900 => 390,  897 => 389,  894 => 387,  891 => 386,  888 => 385,  886 => 384,  883 => 383,  880 => 382,  877 => 381,  875 => 380,  872 => 379,  869 => 378,  866 => 377,  864 => 376,  861 => 375,  858 => 374,  855 => 373,  853 => 372,  850 => 371,  847 => 370,  844 => 369,  841 => 368,  839 => 367,  837 => 366,  834 => 365,  827 => 357,  823 => 356,  819 => 355,  816 => 354,  813 => 353,  806 => 360,  804 => 353,  799 => 351,  795 => 349,  793 => 348,  790 => 347,  783 => 342,  777 => 338,  775 => 337,  770 => 334,  764 => 332,  756 => 327,  753 => 326,  751 => 325,  746 => 323,  742 => 322,  738 => 320,  736 => 319,  733 => 318,  726 => 313,  716 => 305,  714 => 304,  711 => 303,  700 => 294,  698 => 293,  693 => 290,  687 => 288,  681 => 287,  678 => 286,  673 => 285,  670 => 284,  662 => 279,  659 => 278,  657 => 277,  649 => 271,  644 => 268,  632 => 258,  630 => 257,  621 => 251,  617 => 250,  613 => 248,  611 => 247,  608 => 246,  598 => 238,  592 => 237,  586 => 236,  583 => 235,  578 => 234,  575 => 233,  569 => 231,  567 => 230,  558 => 224,  554 => 223,  551 => 222,  548 => 221,  545 => 220,  542 => 219,  539 => 218,  536 => 217,  533 => 216,  531 => 215,  525 => 211,  518 => 207,  511 => 203,  507 => 202,  501 => 199,  498 => 198,  483 => 190,  481 => 189,  478 => 188,  471 => 183,  445 => 163,  443 => 162,  438 => 160,  429 => 154,  420 => 150,  411 => 144,  394 => 136,  390 => 134,  388 => 133,  364 => 115,  359 => 114,  357 => 113,  350 => 111,  346 => 110,  338 => 107,  335 => 106,  332 => 105,  327 => 103,  321 => 99,  319 => 98,  313 => 96,  296 => 94,  291 => 91,  289 => 90,  286 => 89,  279 => 84,  274 => 124,  263 => 72,  260 => 116,  255 => 68,  250 => 65,  244 => 60,  233 => 54,  178 => 18,  137 => 2,  134 => 39,  129 => 667,  127 => 656,  124 => 655,  114 => 409,  104 => 346,  97 => 246,  77 => 132,  520 => 208,  517 => 168,  508 => 164,  503 => 200,  500 => 162,  493 => 158,  491 => 157,  489 => 156,  487 => 192,  482 => 153,  477 => 151,  467 => 144,  462 => 142,  459 => 141,  450 => 139,  446 => 138,  442 => 137,  431 => 135,  428 => 134,  425 => 152,  422 => 132,  419 => 131,  416 => 130,  410 => 128,  404 => 126,  401 => 125,  396 => 123,  391 => 121,  385 => 132,  383 => 118,  373 => 115,  371 => 114,  353 => 107,  349 => 106,  344 => 105,  342 => 109,  339 => 103,  330 => 104,  324 => 102,  316 => 97,  306 => 127,  304 => 96,  301 => 90,  293 => 85,  288 => 83,  281 => 81,  267 => 120,  261 => 72,  259 => 71,  256 => 70,  248 => 66,  245 => 62,  226 => 54,  218 => 51,  216 => 50,  206 => 45,  180 => 34,  161 => 25,  155 => 51,  152 => 22,  150 => 49,  118 => 4,  70 => 89,  65 => 79,  58 => 60,  53 => 49,  34 => 7,  236 => 89,  232 => 56,  213 => 49,  210 => 84,  207 => 77,  195 => 91,  186 => 36,  184 => 77,  175 => 32,  167 => 27,  160 => 64,  126 => 54,  90 => 161,  84 => 187,  76 => 9,  23 => 2,  480 => 152,  474 => 161,  469 => 158,  461 => 175,  457 => 153,  453 => 151,  444 => 149,  440 => 148,  437 => 147,  435 => 146,  430 => 144,  427 => 143,  423 => 151,  413 => 129,  409 => 132,  407 => 127,  402 => 138,  398 => 137,  393 => 126,  387 => 122,  384 => 121,  381 => 120,  379 => 124,  374 => 116,  368 => 116,  365 => 111,  362 => 109,  360 => 109,  355 => 106,  341 => 105,  337 => 103,  322 => 101,  314 => 99,  312 => 98,  309 => 93,  305 => 95,  298 => 91,  294 => 90,  285 => 89,  283 => 82,  278 => 80,  268 => 85,  264 => 84,  258 => 70,  252 => 80,  247 => 64,  241 => 59,  229 => 55,  220 => 79,  214 => 69,  177 => 33,  169 => 29,  140 => 59,  132 => 51,  128 => 9,  107 => 347,  61 => 13,  273 => 96,  269 => 75,  254 => 92,  243 => 61,  240 => 60,  238 => 56,  235 => 55,  230 => 53,  227 => 95,  224 => 53,  221 => 77,  219 => 76,  217 => 78,  208 => 68,  204 => 72,  179 => 69,  159 => 61,  143 => 56,  135 => 58,  119 => 487,  102 => 18,  71 => 19,  67 => 53,  63 => 70,  59 => 3,  38 => 6,  94 => 245,  89 => 197,  85 => 150,  75 => 102,  68 => 80,  56 => 15,  87 => 188,  21 => 2,  26 => 12,  93 => 15,  88 => 13,  78 => 103,  46 => 7,  27 => 8,  44 => 8,  31 => 4,  28 => 4,  201 => 35,  196 => 33,  183 => 35,  171 => 14,  166 => 26,  163 => 62,  158 => 52,  156 => 9,  151 => 63,  142 => 59,  138 => 54,  136 => 40,  121 => 46,  117 => 410,  105 => 2,  91 => 14,  62 => 33,  49 => 10,  24 => 7,  25 => 1,  19 => 2,  79 => 149,  72 => 89,  69 => 88,  47 => 48,  40 => 13,  37 => 12,  22 => 3,  246 => 108,  157 => 56,  145 => 60,  139 => 41,  131 => 38,  123 => 47,  120 => 40,  115 => 49,  111 => 47,  108 => 36,  101 => 42,  98 => 17,  96 => 31,  83 => 113,  74 => 131,  66 => 15,  55 => 59,  52 => 13,  50 => 49,  43 => 20,  41 => 7,  35 => 5,  32 => 4,  29 => 3,  209 => 39,  203 => 78,  199 => 34,  193 => 86,  189 => 71,  187 => 84,  182 => 66,  176 => 64,  173 => 61,  168 => 13,  164 => 59,  162 => 11,  154 => 63,  149 => 51,  147 => 20,  144 => 4,  141 => 48,  133 => 55,  130 => 10,  125 => 8,  122 => 488,  116 => 26,  112 => 25,  109 => 364,  106 => 36,  103 => 39,  99 => 317,  95 => 16,  92 => 198,  86 => 31,  82 => 11,  80 => 112,  73 => 90,  64 => 4,  60 => 69,  57 => 2,  54 => 1,  51 => 14,  48 => 42,  45 => 11,  42 => 7,  39 => 7,  36 => 7,  33 => 1,  30 => 9,);
    }
}
